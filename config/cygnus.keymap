#include <behaviors/rgbled_widget.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        mo_nav {
            bindings = <&mo 1>;
            key-positions = <28 27>;
        };

        bootloader {
            bindings = <&bootloader>;
            key-positions = <0 36 11 47>;
        };

        mo-media {
            bindings = <&mo 2>;
            key-positions = <36 24>;
        };

        mo-nav-layer {
            bindings = <&mo 1>;
            key-positions = <31 32>;
        };
    };

    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_LEFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 42 43 44 45 46 47>;
            tapping-term-ms = <180>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_RIGHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <180>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  ESC |  1  |  2  |  3  |  4  |  5  |   |  6  |  7   |  8  |  9  |  0  |  ?   |
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp GRAVE           &kp N1  &kp N2  &kp N3            &kp N4      &kp N5           &kp N6     &kp N7     &kp N8             &kp N9   &kp N0     &kp MINUS
&kp TAB             &kp Q   &kp W   &kp E             &kp R       &kp T            &kp Y      &kp U      &kp I              &kp O    &kp P      &kp BSLH
&mt LCTRL CAPSLOCK  &kp A   &kp S   &kp D             &kp F       &kp G            &kp H      &kp J      &kp K              &kp L    &kp SEMI   &kp SQT
&kp LSHFT           &kp Z   &kp X   &kp C             &kp V       &kp B            &kp N      &kp M      &kp COMMA          &kp DOT  &kp SLASH  &kp RIGHT_SHIFT
                                    &kp LEFT_COMMAND  &kp ESCAPE  &kp BACKSPACE    &kp ENTER  &kp SPACE  &kp RIGHT_COMMAND
            >;
        };

        nav {
            bindings = <
&trans  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5    &kp F6    &kp F7    &kp F8   &kp F9            &kp MINUS          &kp EQUAL
&trans  &trans  &trans  &trans  &trans  &trans    &kp F10   &kp F11   &kp F12  &trans            &kp LEFT_BRACE     &kp RIGHT_BRACE
&trans  &trans  &trans  &trans  &trans  &trans    &kp LEFT  &kp DOWN  &kp UP   &kp RIGHT         &trans             &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans    &trans   &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans
                        &trans  &trans  &trans    &trans    &trans    &trans
            >;
        };

        media {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans      &trans                &trans                &trans      &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp K_MUTE  &kp C_VOL_DN          &kp C_VOL_UP          &kp K_PREV  &kp K_NEXT
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans      &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &trans      &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans      &trans                &trans                &trans      &trans
                        &trans  &trans  &trans    &trans  &trans      &trans
            >;
        };
    };
};
